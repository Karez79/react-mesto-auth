{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n  _checkRes(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    // если ошибка, отклоняем промис\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\n  }\n  _request(endpoint, options) {\n    const url = `${this._baseUrl}/${endpoint}`;\n    return fetch(url, options).then(this._checkRes);\n  }\n  getProfile() {\n    return this._request('users/me', {\n      method: \"GET\",\n      headers: this._headers\n    });\n  }\n  editProfile(profile) {\n    return this._request(`users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: profile.name,\n        about: profile.about\n      })\n    });\n  }\n  editAvatar(avatarLink) {\n    return this._request(`users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatarLink\n      })\n    });\n  }\n  getInitialCards() {\n    return this._request(`cards`, {\n      method: \"GET\",\n      headers: this._headers\n    });\n  }\n  addCard(card) {\n    return this._request(`cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: card.name,\n        link: card.link\n      })\n    });\n  }\n  deleteCard(cardId) {\n    return this._request(`cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    });\n  }\n  addLike(cardId) {\n    return this._request(`cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    });\n  }\n  deleteLike(cardId) {\n    return this._request(`cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    });\n  }\n  changeCardLikeStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this.deleteLike(cardId);\n    } else {\n      return this.addLike(cardId);\n    }\n  }\n}\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-65',\n  headers: {\n    authorization: 'bad0a43e-1805-4faf-8465-a8ef0cb6b6aa',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_checkRes","res","ok","json","Promise","reject","Error","status","_request","endpoint","url","fetch","then","getProfile","method","editProfile","profile","body","JSON","stringify","name","about","editAvatar","avatarLink","avatar","getInitialCards","addCard","card","link","deleteCard","cardId","addLike","deleteLike","changeCardLikeStatus","isLiked","api","authorization"],"sources":["/Users/ivankozlov/dev/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\n    constructor(options) {\n        this._baseUrl = options.baseUrl;\n        this._headers = options.headers;\n    }\n\n    _checkRes(res) {\n        if (res.ok) {\n            return res.json();\n        }\n\n        // если ошибка, отклоняем промис\n        return Promise.reject(new Error(`Ошибка: ${res.status}`));\n    }\n\n    _request(endpoint, options) {\n        const url = `${this._baseUrl}/${endpoint}`;\n        return fetch(url, options).then(this._checkRes);\n    }\n\n    getProfile() {\n        return this._request('users/me', {\n            method: \"GET\",\n            headers: this._headers\n        });\n\n    }\n\n    editProfile(profile) {\n        return this._request(`users/me`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: profile.name,\n                about: profile.about,\n            })\n        });\n    }\n\n    editAvatar(avatarLink) {\n        return this._request(`users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: avatarLink,\n            })\n        });\n    }\n\n    getInitialCards() {\n        return this._request(`cards`, {\n            method: \"GET\",\n            headers: this._headers\n        });\n    }\n\n    addCard(card) {\n        return this._request(`cards`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: card.name,\n                link: card.link,\n            })\n        });\n    }\n\n    deleteCard(cardId) {\n        return this._request(`cards/${cardId}`, {\n            method: \"DELETE\",\n            headers: this._headers,\n        });\n    }\n\n    addLike(cardId) {\n        return this._request(`cards/${cardId}/likes`, {\n            method: \"PUT\",\n            headers: this._headers,\n        });\n    }\n\n    deleteLike(cardId) {\n        return this._request(`cards/${cardId}/likes`, {\n            method: \"DELETE\",\n            headers: this._headers\n        });\n    }\n\n    changeCardLikeStatus(cardId, isLiked) {\n        if (isLiked) {\n            return this.deleteLike(cardId);\n        } else {\n            return this.addLike(cardId);\n        }\n    }\n}\n\nexport const api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-65', headers: {\n        authorization: 'bad0a43e-1805-4faf-8465-a8ef0cb6b6aa', 'Content-Type': 'application/json',\n    },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}